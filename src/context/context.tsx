'use client'
import { IActivityRegisterWithId, IUserData } from '@/interfaces';
import { createContext } from 'react';

interface DegeneratesContext {
  routerTo: string,
  setRouterTo: (state: string) => void,
  dataUser: { email: string, displayName: string },
  setDataUser: (state: { email: string, displayName: string }) => void,
  showMessage: { show: boolean, text: string },
  setShowMessage: React.Dispatch<React.SetStateAction<{ show: boolean; text: string }>>,
  logoutUser: boolean,
  setLogoutUser: (state: boolean) => void,
  showForgotPassword: boolean,
  setShowForgotPassword: (state: boolean) => void,
  userData: IUserData,
  setUserData: (state: IUserData) => void,
  showEditProfile: boolean,
  setShowEditProfile: (state: boolean) => void,
  showEditProfileImage: boolean,
  setShowEditProfileImage: (state: boolean) => void,
  showChangePassword: boolean,
  setShowChangePassword: (state: boolean) => void,
  showCreateEvent: boolean,
  setShowCreateEvent: (state: boolean) => void,
  showEditEvent: { show: boolean, id: string },
  setShowEditEvent: (state: { show: boolean, id: string }) => void,
  showEditActivity: { show: boolean, data: IActivityRegisterWithId },
  setShowEditActivity: (state: { show: boolean, data: IActivityRegisterWithId }) => void,
  showEditSubscribe: boolean,
  setShowEditSubscribe: (state: boolean) => void,
  showDeleteEvent: { show: boolean, id: string },
  setShowDeleteEvent: (state: { show: boolean, id: string }) => void,
  showDeleteActivity: { show: boolean, id: string },
  setShowDeleteActivity: (state: { show: boolean, id: string }) => void,
  showDeleteSubscribe: { show: boolean, id: string },
  setShowDeleteSubscribe: (state: { show: boolean, id: string }) => void,
  showSubscribeds: { show: boolean, id: string },
  setShowSubscribeds: (state: { show: boolean, id: string }) => void,
  showCreateActivity: { show: boolean, id: string },
  setShowCreateActivity: (state: { show: boolean, id: string }) => void,
  showSubscribe: { show: boolean, id: string, email: string },
  setShowSubscribe: (state: { show: boolean, id: string, email: string }) => void,
  showCreatePubli: boolean,
  setShowCreatePubli: (state: boolean) => void,
  showEditPubli: boolean,
  setShowEditPubli: (state: boolean) => void,
  showDeletePubli: boolean,
  setShowDeletePubli: (state: boolean) => void,
}

const initialValue: DegeneratesContext = {
  routerTo: '/',
  setRouterTo: () => {},
  dataUser: { email: '', displayName: '' },
  setDataUser: () => {},
  showMessage: { show: false, text: '' },
  setShowMessage: () => {},
  logoutUser: false,
  setLogoutUser: () => {},
  showForgotPassword: false,
  setShowForgotPassword: () => {},
  userData: { id: '', firstName: '', lastName: '', email: '', imageURL: '', description: '', role: '' },
  setUserData : () => {},
  showEditProfile: false,
  setShowEditProfile: () => {},
  showEditProfileImage: false,
  setShowEditProfileImage: () => {},
  showChangePassword: false,
  setShowChangePassword: () => {},
  showCreateEvent: false,
  setShowCreateEvent: () => {},
  showEditEvent: { show: false, id: '' },
  setShowEditEvent: () => {},
  showEditActivity: { show: false, data: { id: '', dm: '', eventId: '', name: '', typeActivity: '', systemSession: { name: '', description: '' }, spots: 0, availableSpots: 0, noSpots: false, dates: [], description: '', sensibility: '' }},
  showEditSubscribe: false,
  setShowEditSubscribe: () => {},
  setShowEditActivity: () => {},
  showDeleteEvent: { show: false, id: '' },
  setShowDeleteEvent: () => {},
  showDeleteActivity: { show: false, id: '' },
  setShowDeleteActivity: () => {},
  showDeleteSubscribe: { show: false, id: '' },
  setShowDeleteSubscribe: () => {},
  showCreateActivity: { show: false, id: '' },
  setShowCreateActivity: () => {},
  showSubscribe: { show: false, id: '', email: '' },
  setShowSubscribe: () => {},
  showSubscribeds: { show: false, id: '' },
  setShowSubscribeds: () => {},
  showCreatePubli: false,
  setShowCreatePubli: () => {},
  showEditPubli: false,
  setShowEditPubli: () => {},
  showDeletePubli: false,
  setShowDeletePubli: () => {},
}

const contexto = createContext(initialValue);
export default contexto;